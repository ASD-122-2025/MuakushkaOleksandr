Міністерство освіти і науки України
Кременчуцький національний університет 
імені Михайла Остроградського
Навчально-науковий інститут електричної інженерії 
та інформаційних технологій

Кафедра автоматизації та інформаційних систем

НаВчальна дисципліна
«Алгоритми та структури даних»


Звіт
З лабораторної роботи №1



Виконав
студент групи КН-24-1
Мякушка О. В.

Перевірив
доцент кафедри АІС
Сидоренко В. М.



Кременчук 2024

Тема:	Налагоджування та робота у Python+PyCharm+Git-GitHub
середовищі
Мета:	Швидкий старт для роботи із системою контролю версій (СКВ) Git, віддаленим репозиторієм GitHub та для роботи з інтерпретатором Python у середовищі IDE PyCharm під контролем Git.

Хід роботи
Створення акаунта на GitHub та налаштування доступу
1.	Зареєструвався на GitHub, зайшов в організацію і створив там репозиторій зі своїм прізвищем та ім’ям. (рис.1). 
 

Рисунок 1 – «Репозиторій на GitHub»

Встановлення та налаштування IDE PyCharm
1.	Встановив інтерпретатор python 3.13.
2.	Скачав та інсталював IDE PyCharm, створив проект та зв’язав його з репозиторієм на GitHub.
Створення Python коду та коміт 
1.	Створюємо легенький код у нашому створеному проекті з фразою “Привіт, Прізвище”.
2.	Комітимо файл до локального репозиторію.
Додаткові питання
1.	PyCharm – це інтегроване середовище розробки для мови Python, створене компанією JetBrains.
2.	Система контролю версій – це інструмент, що зберігає історію файлів, дає можливість повернутися до попередньої версії коду, дозволяє командну роботу над проектом. Git є розподіленою системою контролю версій, де кожен користувач має повну копію історії проєкту, тоді як SVN є централізованою системою, де історія зберігається на сервері.
3.	Команда git add додає всі змінені та нові файли до індексу, що дозволяє комітити саме останню версію проекту.
4.	Команда git commit фіксує зміни у локальному репозиторії, тобто комітить файли.
5.	Команда git push надсилає коміти з локального репозиторію у віддалений.

Висновки: В ході цієї роботи ми навчилися працювати з Git-GitHub, а також системою управління версіями, створили репо. Розглянули PyCharm та зробили основні дії з проектом на локальному та віддаленому репозиторіях. 
